name: 'Docker Build and Push'
description: 'Builds a Docker image and optionally pushes it to a registry.'

inputs:
  image_name:
    description: 'Base name of the Docker image (e.g., hammer, firebase-emulators)'
    required: true
  context_path:
    description: 'Path to the Docker build context relative to repository root (e.g., ./images/hammer)'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile relative to the build context (e.g., Dockerfile or custom/Dockerfile.dev). Default is Dockerfile in context_path.'
    required: false
    default: 'Dockerfile'
  platforms:
    description: 'Comma-separated list of platforms to build for'
    required: false
    default: 'linux/amd64,linux/arm64'
  registry:
    description: 'Target container registry (e.g., ghcr.io)'
    required: false
    default: 'ghcr.io'
  registry_username:
    description: 'Username for the container registry'
    required: false
    default: ${{ github.actor }}
  registry_password:
    description: 'Password or token for the container registry. Typically secrets.GITHUB_TOKEN for GHCR.'
    required: true
  do_push:
    description: "Whether to push the image. Should be a string 'true' or 'false' from an expression."
    required: true
  git_tag_prefix_for_version:
    description: 'Git tag prefix to strip for Docker tag version (e.g., hammer/). Include trailing slash. Use empty string if tags are direct versions like v1.0.0.'
    required: false
    default: ''
  image_description:
    description: 'Description for the Docker image, used in OCI labels.'
    required: false
    default: 'Container image built by GitHub Actions.'

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Registry
      if: inputs.do_push == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image_name }}
        annotations: |
          org.opencontainers.image.title=${{ inputs.image_name }}
          org.opencontainers.image.description=${{ inputs.image_description }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image_name }}
          org.opencontainers.image.description=${{ inputs.image_description }}
        tags: |
          type=ref,event=pr
          type=sha,prefix=pr-,suffix=,event=pr,format=short
          type=match,pattern=^${{ inputs.git_tag_prefix_for_version }}(.*)$,group=1,enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && inputs.git_tag_prefix_for_version != '' }}
          type=ref,event=tag,enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && inputs.git_tag_prefix_for_version == '' }}
          type=sha,prefix=,suffix=,event=tag,enable=${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }},format=short

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        file: ${{ inputs.context_path }}/${{ inputs.dockerfile_path }}
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ inputs.do_push == 'true' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
